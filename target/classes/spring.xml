<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           https://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           https://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder local-override="true" location="classpath:config.properties"/>
    <context:component-scan base-package="com.wn32">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.jdbcUrl}"/>
        <property name="username" value="${jdbc.password}"/>
        <property name="password" value="${jdbc.username}"/>
    </bean>


     <!-- 配置SqlSession-->
     <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
     <property name="dataSource" ref="dataSource"/>
     <!-- 如果后期不⽤Mapper的xml配置⽂件，全注解配置Java类配置，该属性也可以省略-->
     <property name="mapperLocations" value="classpath:com/wn32/mapper/*.xml"/>
     <!-- 指定mybatis的配置⽂件，如果有的话-->
     <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
     </bean>

     <!-- 配置包扫描，扫描Mapper接⼝-->
     <!-- Mapper的代理对象⼀定是由mybatis⾃⼰⽣成的，然后再转交给ioc来管理，为了注⼊到service中-->
     <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <!-- 看清楚时BeanName 不是Bean 所有给value⽽不是ref-->
     <property name="sqlSessionFactoryBeanName" value="sqlSession"/>
     <!-- 指定接⼝所在的包-->
     <property name="basePackage" value="com.wn32.mapper"/>
     </bean>

    <!--开启注解aop支持-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 开启平台事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 开启注解事务支持-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>